{"version":3,"file":"static/webpack/static\\development\\pages\\projects.js.9d2f16acce03ecb056cf.hot-update.js","sources":["webpack:///./components/NavBar.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Link from \"./Link\";\r\n// import Link from \"next/link\";\r\nconst assetPrefix = process.env.ASSET_PREFIX;\r\nconst NavBar = props => {\r\n  const [navClassName, setNavClassName] = useState(\"collapse navbar-collapse\");\r\n  const [navbarColor, setNavbarColor] = useState(\"navbar-transparent\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  // console.log(isLoading);\r\n  const navRef = useRef(null);\r\n\r\n  const handleNav = () => {\r\n    if (navClassName !== \"\") {\r\n      // opened navbar\r\n      setNavClassName(\"\");\r\n    } else {\r\n      // collapsed navbar\r\n      setNavClassName(\"collapse navbar-collapse\");\r\n    }\r\n  };\r\n\r\n  const handleClickOutsideRef = ref => {\r\n    const handleClickOutside = event => {\r\n      if (\r\n        ref.current &&\r\n        !ref.current.contains(event.target) &&\r\n        navClassName === \"\"\r\n      ) {\r\n        handleNav();\r\n      }\r\n    };\r\n\r\n    useEffect(() => {\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const scroll_height = window.innerHeight * 0.2;\r\n    console.log(scroll_height);\r\n    setIsLoading(false);\r\n    const updateNavbarColor = () => {\r\n      if (\r\n        document.documentElement.scrollTop > scroll_height ||\r\n        document.body.scrollTop > scroll_height\r\n      ) {\r\n        // console.log(\"setNavbarColor to not transparent\");\r\n        setNavbarColor(\"\");\r\n      } else if (\r\n        document.documentElement.scrollTop < scroll_height ||\r\n        document.body.scrollTop < scroll_height\r\n      ) {\r\n        // console.log(\"setNavbarColor to transparent\");\r\n        setNavbarColor(\"navbar-transparent\");\r\n      }\r\n    };\r\n    window.addEventListener(\"scroll\", updateNavbarColor);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", updateNavbarColor);\r\n    };\r\n  }, [isLoading]);\r\n\r\n  const navMenu = (\r\n    <div\r\n      className={navClassName}\r\n      style={{ width: \"100%\", display: \"flex !important\", flexBasis: \"auto\" }}>\r\n      <ul className=\"navbar-nav ml-auto nav-ul\">\r\n        {props.navMenu.map((menu, index) => (\r\n          <li className=\"nav-item nav-li\" key={index}>\r\n            <Link href={menu.link}>\r\n              <a href={menu.link} className=\"nav-link\" onClick={handleNav}>\r\n                {menu.icon != \"\" ? (\r\n                  <span style={{ margin: \"0 4px\" }}>\r\n                    <FontAwesomeIcon icon={menu.icon} />\r\n                  </span>\r\n                ) : null}\r\n                {menu.label}\r\n              </a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n  handleClickOutsideRef(navRef);\r\n\r\n  return (\r\n    <nav className={\"navbar fixed-top navbar-expand-lg \" + navbarColor}>\r\n      <div className=\"container nav-container\" ref={navRef}>\r\n        <div className=\"navbar-translate\">\r\n          <Link href={props.navMenu[0].link}>\r\n            <a className=\"navbar-brand\">\r\n              <img\r\n                src={`${assetPrefix}${props.navMenu[0].logo}`}\r\n                alt=\"\"\r\n                width=\"30\"\r\n                scroll_height=\"30\"\r\n              />{\" \"}\r\n              {props.navMenu[0].brand}\r\n            </a>\r\n          </Link>\r\n          <button\r\n            className={`navbar-toggler ${navClassName === \"\" ? \"toggled\" : \"\"}`}\r\n            type=\"button\"\r\n            onClick={handleNav}>\r\n            <span className=\"sr-only\"></span>\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n        </div>\r\n        {navMenu}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AACA;AAiBA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}