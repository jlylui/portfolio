{"version":3,"file":"static/webpack/static\\development\\pages\\shares.js.70f3937f03f115ae2e80.hot-update.js","sources":["webpack:///./pages/shares.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport GraphCard from \"../components/GraphCard\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nconst GetStockDataUrl = () => {\r\n  if (process.env.NODE_ENV === \"production\") {\r\n    return process.env.RESTURL_STOCKDATA_PROD;\r\n  } else {\r\n    return process.env.RESTURL_STOCKDATA_DEV;\r\n  }\r\n};\r\n\r\nconst Shares = props => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    setIsLoading(props.isLoading);\r\n  });\r\n  return (\r\n    <Layout className=\"content-page\" hide={true} subtitle=\"Share\">\r\n      <div className=\"row\">\r\n        <div className=\"page-container\">\r\n          <div className=\"container \">\r\n            {/* <h3 className=\"title\">Share</h3> */}\r\n            <div className=\"section\">\r\n              {isLoading ? (\r\n                <div>\r\n                  <p className=\"text-center text-info\">\r\n                    <FontAwesomeIcon icon={\"spinner\"} spin size=\"2x\" />\r\n                  </p>\r\n                </div>\r\n              ) : props.httpRequestErrored ? (\r\n                <div>\r\n                  <p>HTTP Request Error</p>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <h4>{props.timeData[\"Meta Data\"][\"2. Symbol\"]}</h4>\r\n                  <table className=\"table\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <th data-field=\"price\">Price</th>\r\n                        <td>\r\n                          {props.quoteRequestData[\"Global Quote\"][\"05. price\"]}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th data-field=\"change\">Change</th>\r\n                        <td\r\n                          className={\r\n                            props.quoteRequestData[\"Global Quote\"][\r\n                              \"09. change\"\r\n                            ] > 0\r\n                              ? \"text-success\"\r\n                              : \"text-danger\"\r\n                          }>\r\n                          {props.quoteRequestData[\"Global Quote\"][\"09. change\"]}{\" \"}\r\n                          (\r\n                          {\r\n                            props.quoteRequestData[\"Global Quote\"][\r\n                              \"10. change percent\"\r\n                            ]\r\n                          }\r\n                          )\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th data-field=\"previous-close\">Previous Close</th>\r\n                        <td>\r\n                          {\r\n                            props.quoteRequestData[\"Global Quote\"][\r\n                              \"08. previous close\"\r\n                            ]\r\n                          }\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th data-field=\"volume\">Volume</th>\r\n                        <td>\r\n                          {props.quoteRequestData[\"Global Quote\"][\"06. volume\"]}\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <GraphCard\r\n                    timeSeriesData={props.timeData[\"Time Series (Daily)\"]}\r\n                    metaData={props.timeData[\"Meta Data\"]}\r\n                  />\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nShares.getInitialProps = async ({ query }) => {\r\n  console.log(query.shareCode);\r\n  console.log(query.shareCode.replace(\".html\", \"\"));\r\n  const commonParams = {\r\n    symbol: query.shareCode,\r\n    apikey: \"H8HG5KWNVPK38JDU\"\r\n  };\r\n  let res = { isLoading: true };\r\n  let promise = axios\r\n    .get(GetStockDataUrl(), {\r\n      params: {\r\n        function: \"GLOBAL_QUOTE\",\r\n        ...commonParams\r\n      }\r\n    })\r\n    .then(response => {\r\n      res = {\r\n        isLoading: false,\r\n        quoteRequestErrored: false,\r\n        quoteRequestStatus: response.status,\r\n        quoteRequestStatusText: response.statusText,\r\n        quoteRequestData: response.data\r\n      };\r\n      return axios.get(\"https://www.alphavantage.co/query\", {\r\n        params: {\r\n          function: \"TIME_SERIES_DAILY\",\r\n          ...commonParams\r\n        }\r\n      });\r\n    })\r\n    .then(response => {\r\n      res = {\r\n        ...res,\r\n        timeRequestErrored: false,\r\n        timeRequestStatus: response.status,\r\n        timeRequestStatusText: response.statusText,\r\n        timeData: response.data\r\n      };\r\n      return res;\r\n    })\r\n    .catch(error => {\r\n      return {\r\n        httpRequestErrored: true,\r\n        message: error.message\r\n      };\r\n    });\r\n\r\n  return promise;\r\n};\r\n\r\nexport default Shares;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ekiDA;;;;A","sourceRoot":""}