{"version":3,"file":"static/webpack/static\\development\\pages\\projects.js.1066662de5e043210347.hot-update.js","sources":["webpack:///./components/StockData.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Search from \"./Search\";\r\nimport Link from \"./Link\";\r\n\r\nconst StockData = () => {\r\n  const [response, setResponse] = useState(null);\r\n\r\n  const handleResponse = respData => {\r\n    if (respData.httpRequestErrored) {\r\n      console.log(respData.message);\r\n    } else {\r\n      setResponse(respData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"section container\">\r\n      <h4 style={{ textTransform: \"uppercase\" }}>Investment Project</h4>\r\n      <div style={{ padding: \"10px 0\" }}>\r\n        <Link\r\n          href={{\r\n            pathname: \"/shares\",\r\n            query: {\r\n              shareCode: \"APX.AUS\"\r\n            }\r\n          }}\r\n          as={`shares/APX.AUS`}>\r\n          <a className=\"btn btn-primary btn-raised inline-btn\">APX</a>\r\n        </Link>\r\n      </div>\r\n      <Search onSubmit={handleResponse} />\r\n      {/* TODO: fix the issue if response data returned with array data but filter with region returns an empty array */}\r\n      {response ? (\r\n        response.data[\"bestMatches\"] &&\r\n        response.data[\"bestMatches\"].length > 0 ? (\r\n          <ul>\r\n            {response.data[\"bestMatches\"]\r\n              .filter(match =>\r\n                response.inputRegion !== \"\"\r\n                  ? match[\"4. region\"] === response.inputRegion\r\n                  : match\r\n              )\r\n              .map((result, index) => (\r\n                <li key={index}>\r\n                  <Link\r\n                    href={{\r\n                      pathname: \"/shares\",\r\n                      query: {\r\n                        shareCode: result[\"1. symbol\"]\r\n                      }\r\n                    }}\r\n                    as={`shares/${result[\"1. symbol\"]}`}>\r\n                    <a>\r\n                      {result[\"1. symbol\"]} ({result[\"2. name\"]}{\" \"}\r\n                      {response.inputRegion !== \"\" ? \"\" : result[\"4. region\"]})\r\n                    </a>\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No match found</p>\r\n        )\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockData;\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}